var pages = [{"name":"class AtomicReference<T>(value: T)","description":"com.suparnatural.core.concurrency.AtomicReference","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/index.html","searchKeys":["AtomicReference","class AtomicReference<T>(value: T)"]},{"name":"fun <T> AtomicReference(value: T)","description":"com.suparnatural.core.concurrency.AtomicReference.AtomicReference","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/-atomic-reference.html","searchKeys":["AtomicReference","fun <T> AtomicReference(value: T)"]},{"name":"fun compareAndSet(expected: T, new: T): Boolean","description":"com.suparnatural.core.concurrency.AtomicReference.compareAndSet","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/compare-and-set.html","searchKeys":["compareAndSet","fun compareAndSet(expected: T, new: T): Boolean"]},{"name":"var value: T","description":"com.suparnatural.core.concurrency.AtomicReference.value","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/value.html","searchKeys":["value","var value: T"]},{"name":"class BackgroundWorker(worker: Worker) : Worker","description":"com.suparnatural.core.concurrency.BackgroundWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/index.html","searchKeys":["BackgroundWorker","class BackgroundWorker(worker: Worker) : Worker"]},{"name":"fun BackgroundWorker(worker: Worker = Worker.start())","description":"com.suparnatural.core.concurrency.BackgroundWorker.BackgroundWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/-background-worker.html","searchKeys":["BackgroundWorker","fun BackgroundWorker(worker: Worker = Worker.start())"]},{"name":"open override fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.BackgroundWorker.execute","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/execute.html","searchKeys":["execute","open override fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>"]},{"name":"open fun <T, V> execute(jobInput: T, job: (T) -> V): <ERROR CLASS><V>","description":"com.suparnatural.core.concurrency.LooperWorker.execute","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/execute.html","searchKeys":["execute","open fun <T, V> execute(jobInput: T, job: (T) -> V): <ERROR CLASS><V>"]},{"name":"open override fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.MainWorker.execute","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/execute.html","searchKeys":["execute","open override fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>"]},{"name":"abstract fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.Worker.execute","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/execute.html","searchKeys":["execute","abstract fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>"]},{"name":"open override fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>","description":"com.suparnatural.core.concurrency.BackgroundWorker.executeAndResume","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/execute-and-resume.html","searchKeys":["executeAndResume","open override fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>"]},{"name":"open fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: <ERROR CLASS>, awaitResumingJob: Boolean, resumingJob: (V) -> W): <ERROR CLASS><V>","description":"com.suparnatural.core.concurrency.LooperWorker.executeAndResume","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/execute-and-resume.html","searchKeys":["executeAndResume","open fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: <ERROR CLASS>, awaitResumingJob: Boolean, resumingJob: (V) -> W): <ERROR CLASS><V>"]},{"name":"open override fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>","description":"com.suparnatural.core.concurrency.MainWorker.executeAndResume","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/execute-and-resume.html","searchKeys":["executeAndResume","open override fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>"]},{"name":"abstract fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker = WorkerFactory.current, awaitResumingJob: Boolean = false, resumingJob: (V) -> W): Future<V>","description":"com.suparnatural.core.concurrency.Worker.executeAndResume","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/execute-and-resume.html","searchKeys":["executeAndResume","abstract fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker = WorkerFactory.current, awaitResumingJob: Boolean = false, resumingJob: (V) -> W): Future<V>"]},{"name":"open override val id: Long","description":"com.suparnatural.core.concurrency.BackgroundWorker.id","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/id.html","searchKeys":["id","open override val id: Long"]},{"name":"open val id: Long","description":"com.suparnatural.core.concurrency.LooperWorker.id","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/id.html","searchKeys":["id","open val id: Long"]},{"name":"open override val id: Long","description":"com.suparnatural.core.concurrency.MainWorker.id","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/id.html","searchKeys":["id","open override val id: Long"]},{"name":"abstract val id: Long","description":"com.suparnatural.core.concurrency.Worker.id","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/id.html","searchKeys":["id","abstract val id: Long"]},{"name":"open override fun terminate(finishPendingTasks: Boolean): Future<Unit>","description":"com.suparnatural.core.concurrency.BackgroundWorker.terminate","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/terminate.html","searchKeys":["terminate","open override fun terminate(finishPendingTasks: Boolean): Future<Unit>"]},{"name":"open fun terminate(finishPendingTasks: Boolean): <ERROR CLASS><Unit>","description":"com.suparnatural.core.concurrency.LooperWorker.terminate","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/terminate.html","searchKeys":["terminate","open fun terminate(finishPendingTasks: Boolean): <ERROR CLASS><Unit>"]},{"name":"open override fun terminate(finishPendingTasks: Boolean): Future<Unit>","description":"com.suparnatural.core.concurrency.MainWorker.terminate","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/terminate.html","searchKeys":["terminate","open override fun terminate(finishPendingTasks: Boolean): Future<Unit>"]},{"name":"abstract fun terminate(finishPendingTasks: Boolean = true): Future<Unit>","description":"com.suparnatural.core.concurrency.Worker.terminate","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/terminate.html","searchKeys":["terminate","abstract fun terminate(finishPendingTasks: Boolean = true): Future<Unit>"]},{"name":"class DeferredFuture<T> : Future<T> ","description":"com.suparnatural.core.concurrency.DeferredFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/index.html","searchKeys":["DeferredFuture","class DeferredFuture<T> : Future<T> "]},{"name":"fun DeferredFuture()","description":"com.suparnatural.core.concurrency.DeferredFuture.DeferredFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/-deferred-future.html","searchKeys":["DeferredFuture","fun DeferredFuture()"]},{"name":"open override fun await(): T","description":"com.suparnatural.core.concurrency.DeferredFuture.await","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/await.html","searchKeys":["await","open override fun await(): T"]},{"name":"abstract fun await(): T","description":"com.suparnatural.core.concurrency.Future.await","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-future/await.html","searchKeys":["await","abstract fun await(): T"]},{"name":"open override fun await(): V","description":"com.suparnatural.core.concurrency.JobFuture.await","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/await.html","searchKeys":["await","open override fun await(): V"]},{"name":"open override fun await(): T","description":"com.suparnatural.core.concurrency.NativeFuture.await","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/await.html","searchKeys":["await","open override fun await(): T"]},{"name":"open override fun await(): T","description":"com.suparnatural.core.concurrency.ValueFuture.await","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/await.html","searchKeys":["await","open override fun await(): T"]},{"name":"open override var isCompleted: Boolean = false","description":"com.suparnatural.core.concurrency.DeferredFuture.isCompleted","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/is-completed.html","searchKeys":["isCompleted","open override var isCompleted: Boolean = false"]},{"name":"abstract var isCompleted: Boolean","description":"com.suparnatural.core.concurrency.Future.isCompleted","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-future/is-completed.html","searchKeys":["isCompleted","abstract var isCompleted: Boolean"]},{"name":"open override var isCompleted: Boolean = false","description":"com.suparnatural.core.concurrency.JobFuture.isCompleted","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/is-completed.html","searchKeys":["isCompleted","open override var isCompleted: Boolean = false"]},{"name":"open override var isCompleted: Boolean","description":"com.suparnatural.core.concurrency.NativeFuture.isCompleted","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/is-completed.html","searchKeys":["isCompleted","open override var isCompleted: Boolean"]},{"name":"open override var isCompleted: Boolean = true","description":"com.suparnatural.core.concurrency.ValueFuture.isCompleted","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/is-completed.html","searchKeys":["isCompleted","open override var isCompleted: Boolean = true"]},{"name":"fun setValue(newValue: T)","description":"com.suparnatural.core.concurrency.DeferredFuture.setValue","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/set-value.html","searchKeys":["setValue","fun setValue(newValue: T)"]},{"name":"operator fun setValue(thisRef: Any?, property: KProperty<*>, value: T)","description":"com.suparnatural.core.concurrency.Immutability.setValue","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: Any?, property: KProperty<*>, value: T)"]},{"name":"interface Future<T>","description":"com.suparnatural.core.concurrency.Future","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-future/index.html","searchKeys":["Future","interface Future<T>"]},{"name":"class Immutability<T>(initialValue: T)","description":"com.suparnatural.core.concurrency.Immutability","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/index.html","searchKeys":["Immutability","class Immutability<T>(initialValue: T)"]},{"name":"fun <T> Immutability(initialValue: T)","description":"com.suparnatural.core.concurrency.Immutability.Immutability","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/-immutability.html","searchKeys":["Immutability","fun <T> Immutability(initialValue: T)"]},{"name":"operator fun getValue(thisRef: Any?, property: KProperty<*>): T","description":"com.suparnatural.core.concurrency.Immutability.getValue","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any?, property: KProperty<*>): T"]},{"name":"class Job<Input, Output>","description":"com.suparnatural.core.concurrency.Job","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job/index.html","searchKeys":["Job","class Job<Input, Output>"]},{"name":"object Companion","description":"com.suparnatural.core.concurrency.Job.Companion","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"com.suparnatural.core.concurrency.ResumableJob.Companion","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"com.suparnatural.core.concurrency.WorkerFactory.Companion","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"fun <I, O> create(payload: I, job: (O) -> Unit): Job<I, O>","description":"com.suparnatural.core.concurrency.Job.Companion.create","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job/-companion/create.html","searchKeys":["create","fun <I, O> create(payload: I, job: (O) -> Unit): Job<I, O>"]},{"name":"fun <JobInput, ResultHandlerInput, ResultHandlerOutput> create(jobInput: JobInput, job: (JobInput) -> ResultHandlerInput, resumingWorker: Worker = WorkerFactory.current, awaitResumingJob: Boolean = false, resumingJob: (ResultHandlerInput) -> ResultHandlerOutput): ResumableJob<JobInput, ResultHandlerInput, ResultHandlerOutput>","description":"com.suparnatural.core.concurrency.ResumableJob.Companion.create","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/-companion/create.html","searchKeys":["create","fun <JobInput, ResultHandlerInput, ResultHandlerOutput> create(jobInput: JobInput, job: (JobInput) -> ResultHandlerInput, resumingWorker: Worker = WorkerFactory.current, awaitResumingJob: Boolean = false, resumingJob: (ResultHandlerInput) -> ResultHandlerOutput): ResumableJob<JobInput, ResultHandlerInput, ResultHandlerOutput>"]},{"name":"val job: (Output) -> Unit","description":"com.suparnatural.core.concurrency.Job.job","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job/job.html","searchKeys":["job","val job: (Output) -> Unit"]},{"name":"val job: (T) -> V","description":"com.suparnatural.core.concurrency.JobFuture.job","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/job.html","searchKeys":["job","val job: (T) -> V"]},{"name":"val job: (JobInput) -> ResultHandlerInput","description":"com.suparnatural.core.concurrency.ResumableJob.job","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/job.html","searchKeys":["job","val job: (JobInput) -> ResultHandlerInput"]},{"name":"val payload: Input","description":"com.suparnatural.core.concurrency.Job.payload","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job/payload.html","searchKeys":["payload","val payload: Input"]},{"name":"object JobDispatcher","description":"com.suparnatural.core.concurrency.JobDispatcher","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/index.html","searchKeys":["JobDispatcher","object JobDispatcher"]},{"name":"fun <T, V> dispatchOnCurrentThread(jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.JobDispatcher.dispatchOnCurrentThread","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-current-thread.html","searchKeys":["dispatchOnCurrentThread","fun <T, V> dispatchOnCurrentThread(jobInput: T, job: (T) -> V): Future<V>"]},{"name":"fun <T, V> dispatchOnMainThread(jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.JobDispatcher.dispatchOnMainThread","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-main-thread.html","searchKeys":["dispatchOnMainThread","fun <T, V> dispatchOnMainThread(jobInput: T, job: (T) -> V): Future<V>"]},{"name":"fun <T, V> dispatchOnNewBackgroundThread(jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.JobDispatcher.dispatchOnNewBackgroundThread","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-new-background-thread.html","searchKeys":["dispatchOnNewBackgroundThread","fun <T, V> dispatchOnNewBackgroundThread(jobInput: T, job: (T) -> V): Future<V>"]},{"name":"fun <T, V> dispatchOnWorker(worker: Worker, jobInput: T, job: (T) -> V): Future<V>","description":"com.suparnatural.core.concurrency.JobDispatcher.dispatchOnWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-worker.html","searchKeys":["dispatchOnWorker","fun <T, V> dispatchOnWorker(worker: Worker, jobInput: T, job: (T) -> V): Future<V>"]},{"name":"class JobFuture<T, V>(job: (T) -> V, jobInput: T) : Future<V> ","description":"com.suparnatural.core.concurrency.JobFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/index.html","searchKeys":["JobFuture","class JobFuture<T, V>(job: (T) -> V, jobInput: T) : Future<V> "]},{"name":"fun <T, V> JobFuture(job: (T) -> V, jobInput: T)","description":"com.suparnatural.core.concurrency.JobFuture.JobFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/-job-future.html","searchKeys":["JobFuture","fun <T, V> JobFuture(job: (T) -> V, jobInput: T)"]},{"name":"val jobInput: T","description":"com.suparnatural.core.concurrency.JobFuture.jobInput","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/job-input.html","searchKeys":["jobInput","val jobInput: T"]},{"name":"val jobInput: JobInput","description":"com.suparnatural.core.concurrency.ResumableJob.jobInput","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/job-input.html","searchKeys":["jobInput","val jobInput: JobInput"]},{"name":"class LooperWorker(looper: Looper)","description":"com.suparnatural.core.concurrency.LooperWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/index.html","searchKeys":["LooperWorker","class LooperWorker(looper: Looper)"]},{"name":"fun LooperWorker(looper: Looper)","description":"com.suparnatural.core.concurrency.LooperWorker.LooperWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/-looper-worker.html","searchKeys":["LooperWorker","fun LooperWorker(looper: Looper)"]},{"name":"class MainWorker : Worker","description":"com.suparnatural.core.concurrency.MainWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/index.html","searchKeys":["MainWorker","class MainWorker : Worker"]},{"name":"fun MainWorker()","description":"com.suparnatural.core.concurrency.MainWorker.MainWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/-main-worker.html","searchKeys":["MainWorker","fun MainWorker()"]},{"name":"class MutexLock","description":"com.suparnatural.core.concurrency.MutexLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/index.html","searchKeys":["MutexLock","class MutexLock"]},{"name":"fun destroy()","description":"com.suparnatural.core.concurrency.MutexLock.destroy","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/destroy.html","searchKeys":["destroy","fun destroy()"]},{"name":"fun destroy()","description":"com.suparnatural.core.concurrency.ReadWriteLock.destroy","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/destroy.html","searchKeys":["destroy","fun destroy()"]},{"name":"fun lock()","description":"com.suparnatural.core.concurrency.MutexLock.lock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/lock.html","searchKeys":["lock","fun lock()"]},{"name":"fun tryLock(): Boolean","description":"com.suparnatural.core.concurrency.MutexLock.tryLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/try-lock.html","searchKeys":["tryLock","fun tryLock(): Boolean"]},{"name":"fun unlock()","description":"com.suparnatural.core.concurrency.MutexLock.unlock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/unlock.html","searchKeys":["unlock","fun unlock()"]},{"name":"class NativeFuture<T> : Future<T> ","description":"com.suparnatural.core.concurrency.NativeFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/index.html","searchKeys":["NativeFuture","class NativeFuture<T> : Future<T> "]},{"name":"fun <T> NativeFuture(future: <ERROR CLASS><T>)","description":"com.suparnatural.core.concurrency.NativeFuture.NativeFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/-native-future.html","searchKeys":["NativeFuture","fun <T> NativeFuture(future: <ERROR CLASS><T>)"]},{"name":"class ReadWriteLock","description":"com.suparnatural.core.concurrency.ReadWriteLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/index.html","searchKeys":["ReadWriteLock","class ReadWriteLock"]},{"name":"fun acquireReadLock()","description":"com.suparnatural.core.concurrency.ReadWriteLock.acquireReadLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/acquire-read-lock.html","searchKeys":["acquireReadLock","fun acquireReadLock()"]},{"name":"fun acquireWriteLock()","description":"com.suparnatural.core.concurrency.ReadWriteLock.acquireWriteLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/acquire-write-lock.html","searchKeys":["acquireWriteLock","fun acquireWriteLock()"]},{"name":"fun releaseReadLock()","description":"com.suparnatural.core.concurrency.ReadWriteLock.releaseReadLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/release-read-lock.html","searchKeys":["releaseReadLock","fun releaseReadLock()"]},{"name":"fun releaseWriteLock()","description":"com.suparnatural.core.concurrency.ReadWriteLock.releaseWriteLock","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/release-write-lock.html","searchKeys":["releaseWriteLock","fun releaseWriteLock()"]},{"name":"class ResumableJob<JobInput, ResultHandlerInput, ResultHandlerOutput>","description":"com.suparnatural.core.concurrency.ResumableJob","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/index.html","searchKeys":["ResumableJob","class ResumableJob<JobInput, ResultHandlerInput, ResultHandlerOutput>"]},{"name":"val awaitResumingJob: Boolean","description":"com.suparnatural.core.concurrency.ResumableJob.awaitResumingJob","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/await-resuming-job.html","searchKeys":["awaitResumingJob","val awaitResumingJob: Boolean"]},{"name":"val resumingJob: (ResultHandlerInput) -> ResultHandlerOutput","description":"com.suparnatural.core.concurrency.ResumableJob.resumingJob","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/resuming-job.html","searchKeys":["resumingJob","val resumingJob: (ResultHandlerInput) -> ResultHandlerOutput"]},{"name":"val resumingWorker: Worker","description":"com.suparnatural.core.concurrency.ResumableJob.resumingWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/resuming-worker.html","searchKeys":["resumingWorker","val resumingWorker: Worker"]},{"name":"class ValueFuture<T>(result: T) : Future<T> ","description":"com.suparnatural.core.concurrency.ValueFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/index.html","searchKeys":["ValueFuture","class ValueFuture<T>(result: T) : Future<T> "]},{"name":"fun <T> ValueFuture(result: T)","description":"com.suparnatural.core.concurrency.ValueFuture.ValueFuture","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/-value-future.html","searchKeys":["ValueFuture","fun <T> ValueFuture(result: T)"]},{"name":"interface Worker","description":"com.suparnatural.core.concurrency.Worker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/index.html","searchKeys":["Worker","interface Worker"]},{"name":"class WorkerFactory","description":"com.suparnatural.core.concurrency.WorkerFactory","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/index.html","searchKeys":["WorkerFactory","class WorkerFactory"]},{"name":"fun WorkerFactory()","description":"com.suparnatural.core.concurrency.WorkerFactory.WorkerFactory","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-worker-factory.html","searchKeys":["WorkerFactory","fun WorkerFactory()"]},{"name":"val current: Worker","description":"com.suparnatural.core.concurrency.WorkerFactory.Companion.current","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-companion/current.html","searchKeys":["current","val current: Worker"]},{"name":"val main: Worker","description":"com.suparnatural.core.concurrency.WorkerFactory.Companion.main","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-companion/main.html","searchKeys":["main","val main: Worker"]},{"name":"fun newBackgroundWorker(): Worker","description":"com.suparnatural.core.concurrency.WorkerFactory.Companion.newBackgroundWorker","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-companion/new-background-worker.html","searchKeys":["newBackgroundWorker","fun newBackgroundWorker(): Worker"]},{"name":"fun isMainThread(): Boolean","description":"com.suparnatural.core.concurrency.isMainThread","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/is-main-thread.html","searchKeys":["isMainThread","fun isMainThread(): Boolean"]},{"name":"fun <T> T.toImmutable(): T","description":"com.suparnatural.core.concurrency.toImmutable","location":"suparnatural-concurrency/com.suparnatural.core.concurrency/to-immutable.html","searchKeys":["toImmutable","fun <T> T.toImmutable(): T"]}]
