{
	"operations": [
		{
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/ResponsesList.graphql",
			"operationName": "ResponsesList",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "addExcluded",
					"type": "Boolean"
				},
				{
					"name": "dataView",
					"type": "DataView!"
				},
				{
					"name": "fields",
					"type": "[String]!"
				},
				{
					"name": "commentFields",
					"type": "[String]"
				},
				{
					"name": "filters",
					"type": "JSON"
				},
				{
					"name": "offset",
					"type": "Int!"
				},
				{
					"name": "pageSize",
					"type": "Int!"
				},
				{
					"name": "sortBy",
					"type": "JSON!"
				}
			],
			"source": "query ResponsesList($addExcluded: Boolean, $dataView: DataView!, $fields: [String]!, $commentFields: [String], $filters: JSON, $offset: Int!, $pageSize: Int!, $sortBy: JSON!) {\n  Responses(addExcluded: $addExcluded, dataView: $dataView, fieldIds: $fields, commentFieldIds: $commentFields, filters: $filters, limit: $pageSize, offset: $offset, sortOptions: $sortBy) {\n    __typename\n    responses {\n      __typename\n      id\n      alert {\n        __typename\n        id\n        status {\n          __typename\n          id\n          label\n        }\n      }\n      inbox {\n        __typename\n        isRead\n      }\n      socialMediaSource {\n        __typename\n        id\n        name\n      }\n      exclusionState {\n        __typename\n        ...ExclusionData\n      }\n      fieldData {\n        __typename\n        ...RecordFieldData\n      }\n      commentData {\n        __typename\n        items {\n          __typename\n          ...CommentFieldData\n        }\n      }\n      ...ResponseSocialFeedbackSentimentData\n    }\n    total\n    hasConcealedRecords\n  }\n}",
			"fields": [
				{
					"responseName": "Responses",
					"fieldName": "Responses",
					"type": "Responses",
					"args": [
						{
							"name": "addExcluded",
							"value": {
								"kind": "Variable",
								"variableName": "addExcluded"
							},
							"type": "Boolean"
						},
						{
							"name": "dataView",
							"value": {
								"kind": "Variable",
								"variableName": "dataView"
							},
							"type": "DataView!"
						},
						{
							"name": "fieldIds",
							"value": {
								"kind": "Variable",
								"variableName": "fields"
							},
							"type": "[String]"
						},
						{
							"name": "commentFieldIds",
							"value": {
								"kind": "Variable",
								"variableName": "commentFields"
							},
							"type": "[String]"
						},
						{
							"name": "filters",
							"value": {
								"kind": "Variable",
								"variableName": "filters"
							},
							"type": "JSON"
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "pageSize"
							},
							"type": "Int"
						},
						{
							"name": "offset",
							"value": {
								"kind": "Variable",
								"variableName": "offset"
							},
							"type": "Int"
						},
						{
							"name": "sortOptions",
							"value": {
								"kind": "Variable",
								"variableName": "sortBy"
							},
							"type": "JSON!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "responses",
							"fieldName": "responses",
							"type": "[Response]",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "Unique identifier for the response",
									"isDeprecated": false
								},
								{
									"responseName": "alert",
									"fieldName": "alert",
									"type": "Alert",
									"isConditional": false,
									"description": "Generated alert, if there is one assigned to this response",
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "status",
											"fieldName": "status",
											"type": "AlertStatus!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "label",
													"fieldName": "label",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "inbox",
									"fieldName": "inbox",
									"type": "RecordInbox",
									"isConditional": false,
									"description": "User related information for this response or null if inbox is disabled for the user",
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "isRead",
											"fieldName": "isRead",
											"type": "Boolean",
											"isConditional": false,
											"description": "pre-expanded `readStatus` attribute -- however lacks permission data surrounding mark read/unread",
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "socialMediaSource",
									"fieldName": "socialMediaSource",
									"type": "SocialFeedbackSource",
									"isConditional": false,
									"description": "Source for a social response",
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "exclusionState",
									"fieldName": "exclusionState",
									"type": "RecordExclusionState",
									"isConditional": false,
									"description": "Whether or not the response is marked as excluded",
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ExclusionData"
									],
									"inlineFragments": []
								},
								{
									"responseName": "fieldData",
									"fieldName": "fieldData",
									"type": "RecordFieldData!",
									"isConditional": false,
									"description": "Field value associated with this Response",
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"RecordFieldData"
									],
									"inlineFragments": []
								},
								{
									"responseName": "commentData",
									"fieldName": "commentData",
									"type": "ResponseCommentData",
									"isConditional": false,
									"description": "Comment field data",
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "items",
											"fieldName": "items",
											"type": "[ResponseCommentDatum]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"CommentFieldData"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [
								"ResponseSocialFeedbackSentimentData"
							],
							"inlineFragments": []
						},
						{
							"responseName": "total",
							"fieldName": "total",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "hasConcealedRecords",
							"fieldName": "hasConcealedRecords",
							"type": "Boolean",
							"isConditional": false,
							"description": "if records queried are below the minimum sample size configured",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ExclusionData",
				"RecordFieldData",
				"RecordFieldDatumData",
				"RecordFieldLabeledValueData",
				"CommentFieldData",
				"ResponseSocialFeedbackSentimentData",
				"ResponseSocialSentimentData"
			],
			"sourceWithFragments": "query ResponsesList($addExcluded: Boolean, $dataView: DataView!, $fields: [String]!, $commentFields: [String], $filters: JSON, $offset: Int!, $pageSize: Int!, $sortBy: JSON!) {\n  Responses(addExcluded: $addExcluded, dataView: $dataView, fieldIds: $fields, commentFieldIds: $commentFields, filters: $filters, limit: $pageSize, offset: $offset, sortOptions: $sortBy) {\n    __typename\n    responses {\n      __typename\n      id\n      alert {\n        __typename\n        id\n        status {\n          __typename\n          id\n          label\n        }\n      }\n      inbox {\n        __typename\n        isRead\n      }\n      socialMediaSource {\n        __typename\n        id\n        name\n      }\n      exclusionState {\n        __typename\n        ...ExclusionData\n      }\n      fieldData {\n        __typename\n        ...RecordFieldData\n      }\n      commentData {\n        __typename\n        items {\n          __typename\n          ...CommentFieldData\n        }\n      }\n      ...ResponseSocialFeedbackSentimentData\n    }\n    total\n    hasConcealedRecords\n  }\n}\nfragment ExclusionData on RecordExclusionState {\n  __typename\n  excluded\n}\nfragment RecordFieldData on RecordFieldData {\n  __typename\n  items {\n    __typename\n    ...RecordFieldDatumData\n  }\n}\nfragment RecordFieldDatumData on RecordFieldDatum {\n  __typename\n  values {\n    __typename\n    ...RecordFieldLabeledValueData\n  }\n  field {\n    __typename\n    id\n  }\n}\nfragment RecordFieldLabeledValueData on RecordFieldLabeledValue {\n  __typename\n  label\n  value\n}\nfragment CommentFieldData on ResponseCommentDatum {\n  __typename\n  fieldId\n  textsWithLanguage {\n    __typename\n    text\n    language\n  }\n  originalLanguage\n}\nfragment ResponseSocialFeedbackSentimentData on Response {\n  __typename\n  socialSentiment(dataView: $dataView) {\n    __typename\n    ...ResponseSocialSentimentData\n  }\n}\nfragment ResponseSocialSentimentData on ResponseSocialSentiment {\n  __typename\n  id\n  sentimentId\n  value\n  label\n}",
			"operationId": "2c467b233cbbae3cfdadf0ff14d73059c8f9a7da53c6a6edcfba196b5a29cad6"
		}
	],
	"fragments": [
		{
			"typeCondition": "ResponseCommentDatum",
			"possibleTypes": [
				"ResponseCommentDatum"
			],
			"fragmentName": "CommentFieldData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/CommentDataFragment.graphql",
			"source": "fragment CommentFieldData on ResponseCommentDatum {\n  __typename\n  fieldId\n  textsWithLanguage {\n    __typename\n    text\n    language\n  }\n  originalLanguage\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "fieldId",
					"fieldName": "fieldId",
					"type": "ID",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "textsWithLanguage",
					"fieldName": "textsWithLanguage",
					"type": "[ResponseTextWithLanguage]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "text",
							"fieldName": "text",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "language",
							"fieldName": "language",
							"type": "ResponseLanguage",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "originalLanguage",
					"fieldName": "originalLanguage",
					"type": "ResponseLanguage",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedbackFieldOption",
			"possibleTypes": [
				"FeedbackFieldOption"
			],
			"fragmentName": "FeedbackFieldOptionData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/FeedbackFields.graphql",
			"source": "fragment FeedbackFieldOptionData on FeedbackFieldOption {\n  __typename\n  id\n  name\n  numericValue\n  boxColor\n  fontColor\n  isNoAnswer\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "Unique identifier for the value",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"description": "The name of the value translated to the users language",
					"isDeprecated": false
				},
				{
					"responseName": "numericValue",
					"fieldName": "numericValue",
					"type": "Int",
					"isConditional": false,
					"description": "Numeric value used for aggregation calculations and sorting.\nOnly the fields with data_type.is_numeric: true have this property",
					"isDeprecated": false
				},
				{
					"responseName": "boxColor",
					"fieldName": "boxColor",
					"type": "String",
					"isConditional": false,
					"description": "The color associated to the option if configured. Normally returned as HEX color code",
					"isDeprecated": false
				},
				{
					"responseName": "fontColor",
					"fieldName": "fontColor",
					"type": "String",
					"isConditional": false,
					"description": "The font color associated to the option if configured or null otherwise. Normally returned as HEX color code",
					"isDeprecated": false
				},
				{
					"responseName": "isNoAnswer",
					"fieldName": "isNoAnswer",
					"type": "Boolean",
					"isConditional": false,
					"description": "This indicates if the option is considered an 'N/A' option.\nThere could be more than 1 option marked as no answer per field",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedbackFieldDataTypeNumber",
			"possibleTypes": [
				"FeedbackFieldDataTypeNumber"
			],
			"fragmentName": "FeedbackFieldDataTypeNumberData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/FeedbackFields.graphql",
			"source": "fragment FeedbackFieldDataTypeNumberData on FeedbackFieldDataTypeNumber {\n  __typename\n  min\n  max\n  type\n  multiplier\n  precision\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "min",
					"fieldName": "min",
					"type": "Int",
					"isConditional": false,
					"description": "The minimum value allowed. Null for real-numbers",
					"isDeprecated": false
				},
				{
					"responseName": "max",
					"fieldName": "max",
					"type": "Int",
					"isConditional": false,
					"description": "The maximum value allowed. Null for real-numbers",
					"isDeprecated": false
				},
				{
					"responseName": "type",
					"fieldName": "type",
					"type": "FeedbackFieldDataTypeNumberType!",
					"isConditional": false,
					"description": "The type of number stored in the Field",
					"isDeprecated": false
				},
				{
					"responseName": "multiplier",
					"fieldName": "multiplier",
					"type": "Int",
					"isConditional": false,
					"description": "The number of possible values between two consecutive integers.\nUsed for fields that allow fractional values, null for non-fractional fields",
					"isDeprecated": false
				},
				{
					"responseName": "precision",
					"fieldName": "precision",
					"type": "Float",
					"isConditional": false,
					"description": "The effective precision based on the setting of the multiplier.\nUsed for fields that allow fractional values, null for non-fractional fields",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedbackFieldDataTypeText",
			"possibleTypes": [
				"FeedbackFieldDataTypeText"
			],
			"fragmentName": "FeedbackFieldDataTypeTextData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/FeedbackFields.graphql",
			"source": "fragment FeedbackFieldDataTypeTextData on FeedbackFieldDataTypeText {\n  __typename\n  format\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "format",
					"fieldName": "format",
					"type": "FeedbackFieldDataTypeTextFormat",
					"isConditional": false,
					"description": "The specific format used on the values",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedbackField",
			"possibleTypes": [
				"FeedbackField"
			],
			"fragmentName": "FeedbackFieldData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/FeedbackFields.graphql",
			"source": "fragment FeedbackFieldData on FeedbackField {\n  __typename\n  id\n  name\n  multiValued\n  description\n  isRatingScale\n  layout\n  queryable\n  subRecord {\n    __typename\n    fieldIds\n  }\n  dataType {\n    __typename\n    isNumeric\n    ...FeedbackFieldDataTypeNumberData\n    ...FeedbackFieldDataTypeTextData\n  }\n  options {\n    __typename\n    total\n    items {\n      __typename\n      ...FeedbackFieldOptionData\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "Unique identifier for the Field",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"description": "The name of the Field translated to the user's language",
					"isDeprecated": false
				},
				{
					"responseName": "multiValued",
					"fieldName": "multiValued",
					"type": "Boolean!",
					"isConditional": false,
					"description": "Whether or not the Field can have multiple values",
					"isDeprecated": false
				},
				{
					"responseName": "description",
					"fieldName": "description",
					"type": "String",
					"isConditional": false,
					"description": "Brief description of the Field and what it's used for. This will NOT be translated",
					"isDeprecated": false
				},
				{
					"responseName": "isRatingScale",
					"fieldName": "isRatingScale",
					"type": "Boolean!",
					"isConditional": false,
					"description": "Whether the options of this field are part of a rating scale or not, used for correct rendering",
					"isDeprecated": false
				},
				{
					"responseName": "layout",
					"fieldName": "layout",
					"type": "FeedbackFieldLayout",
					"isConditional": false,
					"description": "Indicates how should a Field should be displayed",
					"isDeprecated": false
				},
				{
					"responseName": "queryable",
					"fieldName": "queryable",
					"type": "Boolean!",
					"isConditional": false,
					"description": "This indicates if the field can be used for query operations like filter and sorting",
					"isDeprecated": false
				},
				{
					"responseName": "subRecord",
					"fieldName": "subRecord",
					"type": "SubRecordConfig",
					"isConditional": false,
					"description": "Configuration present if the field is a member of a sub-record",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "fieldIds",
							"fieldName": "fieldIds",
							"type": "[String]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "dataType",
					"fieldName": "dataType",
					"type": "FeedbackFieldDataTypeInterface!",
					"isConditional": false,
					"description": "Details about the kind of data that can be stored in this Field",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "isNumeric",
							"fieldName": "isNumeric",
							"type": "Boolean!",
							"isConditional": false,
							"description": "Whether the values for this Field can be used as numbers.\nUseful to sort values and for aggregation operations on values of this Field",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"FeedbackFieldDataTypeNumberData",
						"FeedbackFieldDataTypeTextData"
					],
					"inlineFragments": []
				},
				{
					"responseName": "options",
					"fieldName": "options",
					"type": "FeedbackFieldOptions!",
					"isConditional": false,
					"description": "The collection of all possible values the field can have.\nBy default they will be sorted by their natural order (as configured in the system)",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "total",
							"fieldName": "total",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedbackFieldOption]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedbackFieldOptionData"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ModuleConfig",
			"possibleTypes": [
				"ModuleConfig"
			],
			"fragmentName": "ModuleConfig",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/ModuleConfigFragment.graphql",
			"source": "fragment ModuleConfig on ModuleConfig {\n  __typename\n  name\n  configOptions {\n    __typename\n    key\n    type\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "configOptions",
					"fieldName": "configOptions",
					"type": "[ModuleConfigOption]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"description": "The key specified by the Module Author",
							"isDeprecated": false
						},
						{
							"responseName": "type",
							"fieldName": "type",
							"type": "String",
							"isConditional": false,
							"description": "The input type",
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "JSON",
							"isConditional": false,
							"description": "The value selected by the Tech Admin",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ControlOption",
			"possibleTypes": [
				"ControlOption"
			],
			"fragmentName": "ControlOptionData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/Optionbox.graphql",
			"source": "fragment ControlOptionData on ControlOption {\n  __typename\n  id\n  value\n  label\n  type\n  filters\n  slices {\n    __typename\n    label\n    filters\n  }\n  classicSelectionState {\n    __typename\n    urlKey\n    urlValue\n  }\n  ancestors\n  ancestorLabels\n  hasDescendants\n  timeperiodType\n  reportingDateField\n  hideEmptyColumns\n  fieldIds\n  calculation {\n    __typename\n    id\n    label\n    queryKey\n  }\n  benchmark\n  segmentRankerField\n  commentField\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "value",
					"fieldName": "value",
					"type": "ID",
					"isConditional": false,
					"description": "Same as id",
					"isDeprecated": false
				},
				{
					"responseName": "label",
					"fieldName": "label",
					"type": "String",
					"isConditional": false,
					"description": "Translated option label",
					"isDeprecated": false
				},
				{
					"responseName": "type",
					"fieldName": "type",
					"type": "String",
					"isConditional": false,
					"description": "One of: ['simple-option', 'slicing-option', 'control-grouping', ...]",
					"isDeprecated": false
				},
				{
					"responseName": "filters",
					"fieldName": "filters",
					"type": "JSON",
					"isConditional": false,
					"description": "A collection of filters to be applied on this option.\nAn empty collection means that the filter condition will always be true.\nA collection containing one or more filters implies they will be applied using an AND between each of them.",
					"isDeprecated": false
				},
				{
					"responseName": "slices",
					"fieldName": "slices",
					"type": "[Slice]",
					"isConditional": false,
					"description": "A collection of slices that this option identifies as the way to slice data\nfor the use-cases covered by the control that contains this option.",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "label",
							"fieldName": "label",
							"type": "String",
							"isConditional": false,
							"description": "The label that identifies this particular slice of data (if any).\nThe label will be translated in the contexts where a locale is implicit.",
							"isDeprecated": false
						},
						{
							"responseName": "filters",
							"fieldName": "filters",
							"type": "JSON",
							"isConditional": false,
							"description": "The active filters for this slice\nCannot be strictly typed, because filters can be recursive in structure",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "classicSelectionState",
					"fieldName": "classicSelectionState",
					"type": "[ClassicSelectionState]",
					"isConditional": false,
					"description": "An array of key-value pairs used in classic reporting to submit filters for a Control",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "urlKey",
							"fieldName": "urlKey",
							"type": "String",
							"isConditional": false,
							"description": "The key to be used in the classic reporting to submit the filters for this Control",
							"isDeprecated": false
						},
						{
							"responseName": "urlValue",
							"fieldName": "urlValue",
							"type": "String",
							"isConditional": false,
							"description": "A value that can be used in the classic reporting to submit the filters to render a report",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "ancestors",
					"fieldName": "ancestors",
					"type": "[String]",
					"isConditional": false,
					"description": "The identifiers of the ancestors of this node, ordered by increasing depth.\nThe last element of this array is the id of the parent of this node.\nRoot nodes will have an empty array in this property.",
					"isDeprecated": false
				},
				{
					"responseName": "ancestorLabels",
					"fieldName": "ancestorLabels",
					"type": "[String]",
					"isConditional": false,
					"description": "The labels of the ancestors of this node",
					"isDeprecated": false
				},
				{
					"responseName": "hasDescendants",
					"fieldName": "hasDescendants",
					"type": "Boolean",
					"isConditional": false,
					"description": "Whether this node has descendants",
					"isDeprecated": false
				},
				{
					"responseName": "timeperiodType",
					"fieldName": "timeperiodType",
					"type": "String",
					"isConditional": false,
					"description": "For options of the 'timeperiod' control, one of: ['timeperiod', 'custom_timeperiod']",
					"isDeprecated": false
				},
				{
					"responseName": "reportingDateField",
					"fieldName": "reportingDateField",
					"type": "String",
					"isConditional": false,
					"description": "For options of the 'reporting-date' control, the field to be used within timeperiod filters",
					"isDeprecated": false
				},
				{
					"responseName": "hideEmptyColumns",
					"fieldName": "hideEmptyColumns",
					"type": "Boolean",
					"isConditional": false,
					"description": "For options of controls in the 'segments' bundle, the value of the segment field that identifies this segment\nsegment_value: String\nFor options of the 'columns' control, indicates whether the columns for the slices described by this option\nshould be hidden from reporting if they contain no data.",
					"isDeprecated": false
				},
				{
					"responseName": "fieldIds",
					"fieldName": "fieldIds",
					"type": "[String]",
					"isConditional": false,
					"description": "The field ids assigned to the question-group control",
					"isDeprecated": false
				},
				{
					"responseName": "calculation",
					"fieldName": "calculation",
					"type": "Calculation",
					"isConditional": false,
					"description": "For options of the 'calculation' control, the calculation referenced by this option,\nwhich contains a query key that can be used against the Analytics API.",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "label",
							"fieldName": "label",
							"type": "String",
							"isConditional": false,
							"description": "Same as option label",
							"isDeprecated": false
						},
						{
							"responseName": "queryKey",
							"fieldName": "queryKey",
							"type": "String",
							"isConditional": false,
							"description": "Used in Analytics API",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "benchmark",
					"fieldName": "benchmark",
					"type": "String",
					"isConditional": false,
					"description": "For options of the 'benchmark' control, the id of the benchmark referenced by this option",
					"isDeprecated": false
				},
				{
					"responseName": "segmentRankerField",
					"fieldName": "segmentRankerField",
					"type": "String",
					"isConditional": false,
					"description": "For options of the 'segment-ranker' control, the id of the field to be ranked on.",
					"isDeprecated": false
				},
				{
					"responseName": "commentField",
					"fieldName": "commentField",
					"type": "String",
					"isConditional": false,
					"description": "For options of the 'comment-field-rule-topics' control, the id of the comment field that was selected.",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "RecordFieldLabeledValue",
			"possibleTypes": [
				"RecordFieldLabeledValue"
			],
			"fragmentName": "RecordFieldLabeledValueData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/RecordFieldFragments.graphql",
			"source": "fragment RecordFieldLabeledValueData on RecordFieldLabeledValue {\n  __typename\n  label\n  value\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "label",
					"fieldName": "label",
					"type": "String",
					"isConditional": false,
					"description": "The translated label associated to the value, ready to be shown to the user",
					"isDeprecated": false
				},
				{
					"responseName": "value",
					"fieldName": "value",
					"type": "String",
					"isConditional": false,
					"description": "The RecordField value acording to the following mapping:\n`Enumeration`s and `Dynamic alternative sets`  -> Alternative's name.\n`JavaEnum` -> name of the enum.\n`Unit` and `Unit Group` -> unit's identifier.\n`Autoindex text` -> the same text.\n`integer`, `short_int` -> the integer value.\n`fractional` -> decimal value.\n`date` -> `yyyy-MM-dd`.\n`datetime` -> `yyyy-MM-dd HH:mm:ss` for the case of GET operations and\n`yyyy-MM-dd HH:mm:ss Z` for the case of POST operations;\n`country` -> ISO 3166 country code.",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "RecordFieldDatum",
			"possibleTypes": [
				"RecordFieldDatum"
			],
			"fragmentName": "RecordFieldDatumData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/RecordFieldFragments.graphql",
			"source": "fragment RecordFieldDatumData on RecordFieldDatum {\n  __typename\n  values {\n    __typename\n    ...RecordFieldLabeledValueData\n  }\n  field {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "values",
					"fieldName": "values",
					"type": "[RecordFieldLabeledValue]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RecordFieldLabeledValueData"
					],
					"inlineFragments": []
				},
				{
					"responseName": "field",
					"fieldName": "field",
					"type": "FeedbackField!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "Unique identifier for the Field",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "RecordExclusionState",
			"possibleTypes": [
				"RecordExclusionState"
			],
			"fragmentName": "ExclusionData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/RecordFieldFragments.graphql",
			"source": "fragment ExclusionData on RecordExclusionState {\n  __typename\n  excluded\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "excluded",
					"fieldName": "excluded",
					"type": "Boolean!",
					"isConditional": false,
					"description": "Whether the Record is excluded",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "RecordFieldData",
			"possibleTypes": [
				"RecordFieldData"
			],
			"fragmentName": "RecordFieldData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/RecordFieldFragments.graphql",
			"source": "fragment RecordFieldData on RecordFieldData {\n  __typename\n  items {\n    __typename\n    ...RecordFieldDatumData\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "items",
					"fieldName": "items",
					"type": "[RecordFieldDatum]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RecordFieldDatumData"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ResponseSocialSentiment",
			"possibleTypes": [
				"ResponseSocialSentiment"
			],
			"fragmentName": "ResponseSocialSentimentData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/SocialFragments.graphql",
			"source": "fragment ResponseSocialSentimentData on ResponseSocialSentiment {\n  __typename\n  id\n  sentimentId\n  value\n  label\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sentimentId",
					"fieldName": "sentimentId",
					"type": "SocialSentimentId",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "value",
					"fieldName": "value",
					"type": "Int",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "label",
					"fieldName": "label",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Response",
			"possibleTypes": [
				"Response"
			],
			"fragmentName": "ResponseSocialFeedbackSentimentData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/SocialFragments.graphql",
			"source": "fragment ResponseSocialFeedbackSentimentData on Response {\n  __typename\n  socialSentiment(dataView: $dataView) {\n    __typename\n    ...ResponseSocialSentimentData\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "socialSentiment",
					"fieldName": "socialSentiment",
					"type": "ResponseSocialSentiment",
					"args": [
						{
							"name": "dataView",
							"value": {
								"kind": "Variable",
								"variableName": "dataView"
							},
							"type": "DataView!"
						}
					],
					"isConditional": false,
					"description": "Sentiment analysis of a social response",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ResponseSocialSentimentData"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ColorScheme",
			"possibleTypes": [
				"ColorScheme"
			],
			"fragmentName": "SocialFeedbackSourceColorData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/SocialFragments.graphql",
			"source": "fragment SocialFeedbackSourceColorData on ColorScheme {\n  __typename\n  start\n  end\n  background\n  border\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "start",
					"fieldName": "start",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "end",
					"fieldName": "end",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "background",
					"fieldName": "background",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "border",
					"fieldName": "border",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "SocialFeedbackSource",
			"possibleTypes": [
				"SocialFeedbackSource"
			],
			"fragmentName": "SocialFeedbackSourceData",
			"filePath": "file:///Users/suparng/Documents/graphql-test/src/documents/SocialFragments.graphql",
			"source": "fragment SocialFeedbackSourceData on SocialFeedbackSource {\n  __typename\n  id\n  name\n  kind\n  subMetrics {\n    __typename\n    items {\n      __typename\n      percentageField {\n        __typename\n        id\n      }\n    }\n  }\n  overallScore {\n    __typename\n    nativeField {\n      __typename\n      id\n    }\n  }\n  scales {\n    __typename\n    items {\n      __typename\n      min\n      minDecimalPlaces\n      max\n      maxDecimalPlaces\n      colorScheme {\n        __typename\n        ...SocialFeedbackSourceColorData\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "kind",
					"fieldName": "kind",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "subMetrics",
					"fieldName": "subMetrics",
					"type": "SourceSubMetrics!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[SourceScore]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "percentageField",
									"fieldName": "percentageField",
									"type": "SocialFeedbackField",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"description": "Putting the ID at this level so we don't need to go to the field resolvers just to get the ID",
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "overallScore",
					"fieldName": "overallScore",
					"type": "SourceScore!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "nativeField",
							"fieldName": "nativeField",
							"type": "SocialFeedbackField",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "Putting the ID at this level so we don't need to go to the field resolvers just to get the ID",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "scales",
					"fieldName": "scales",
					"type": "ScoreScales!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[ScoreScale]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "min",
									"fieldName": "min",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "minDecimalPlaces",
									"fieldName": "minDecimalPlaces",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "max",
									"fieldName": "max",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "maxDecimalPlaces",
									"fieldName": "maxDecimalPlaces",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "colorScheme",
									"fieldName": "colorScheme",
									"type": "[ColorScheme]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"SocialFeedbackSourceColorData"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		}
	],
	"typesUsed": [
		{
			"kind": "InputObjectType",
			"name": "DataView",
			"fields": [
				{
					"name": "id",
					"type": "String!"
				},
				{
					"name": "minimumSampleSizeEnabled",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "OptionFilteringDatumInput",
			"fields": [
				{
					"name": "filters",
					"type": "JSON"
				},
				{
					"name": "classicSelectionState",
					"type": "[ClassicSelectionStateInput]"
				}
			]
		},
		{
			"kind": "ScalarType",
			"name": "JSON",
			"description": "The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
		},
		{
			"kind": "InputObjectType",
			"name": "ClassicSelectionStateInput",
			"fields": [
				{
					"name": "urlKey",
					"type": "String"
				},
				{
					"name": "urlValue",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ControlSelectionInput",
			"fields": [
				{
					"name": "optionId",
					"type": "ID"
				},
				{
					"name": "controlId",
					"type": "ID"
				},
				{
					"name": "bundleId",
					"type": "ID"
				},
				{
					"name": "instance",
					"type": "Int"
				},
				{
					"name": "linkQuery",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "RoundingMode",
			"values": [
				{
					"name": "HALF_EVEN",
					"isDeprecated": false
				},
				{
					"name": "HALF_UP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ResponseLanguage",
			"values": [
				{
					"name": "AFRIKAANS",
					"isDeprecated": false
				},
				{
					"name": "ALBANIAN",
					"isDeprecated": false
				},
				{
					"name": "ARABIC",
					"isDeprecated": false
				},
				{
					"name": "ARMENIAN",
					"isDeprecated": false
				},
				{
					"name": "AZERBAIJANI",
					"isDeprecated": false
				},
				{
					"name": "BASQUE",
					"isDeprecated": false
				},
				{
					"name": "BELARUSIAN",
					"isDeprecated": false
				},
				{
					"name": "BENGALI",
					"isDeprecated": false
				},
				{
					"name": "BOSNIAN",
					"isDeprecated": false
				},
				{
					"name": "BULGARIAN",
					"isDeprecated": false
				},
				{
					"name": "CATALAN",
					"isDeprecated": false
				},
				{
					"name": "CHICHEWA",
					"isDeprecated": false
				},
				{
					"name": "CHINESE",
					"isDeprecated": false
				},
				{
					"name": "CROATIAN",
					"isDeprecated": false
				},
				{
					"name": "CZECH",
					"isDeprecated": false
				},
				{
					"name": "DANISH",
					"isDeprecated": false
				},
				{
					"name": "DUTCH",
					"isDeprecated": false
				},
				{
					"name": "ENGLISH",
					"isDeprecated": false
				},
				{
					"name": "ESTONIAN",
					"isDeprecated": false
				},
				{
					"name": "FINNISH",
					"isDeprecated": false
				},
				{
					"name": "FRENCH",
					"isDeprecated": false
				},
				{
					"name": "GALICIAN",
					"isDeprecated": false
				},
				{
					"name": "GEORGIAN",
					"isDeprecated": false
				},
				{
					"name": "GERMAN",
					"isDeprecated": false
				},
				{
					"name": "GREEK",
					"isDeprecated": false
				},
				{
					"name": "GUJARATI",
					"isDeprecated": false
				},
				{
					"name": "HAITIAN_CREOLE",
					"isDeprecated": false
				},
				{
					"name": "HAUSA",
					"isDeprecated": false
				},
				{
					"name": "HEBREW",
					"isDeprecated": false
				},
				{
					"name": "HINDI",
					"isDeprecated": false
				},
				{
					"name": "HUNGARIAN",
					"isDeprecated": false
				},
				{
					"name": "ICELANDIC",
					"isDeprecated": false
				},
				{
					"name": "IGBO",
					"isDeprecated": false
				},
				{
					"name": "INDONESIAN",
					"isDeprecated": false
				},
				{
					"name": "IRISH",
					"isDeprecated": false
				},
				{
					"name": "ITALIAN",
					"isDeprecated": false
				},
				{
					"name": "JAPANESE",
					"isDeprecated": false
				},
				{
					"name": "JAVANESE",
					"isDeprecated": false
				},
				{
					"name": "KANNADA",
					"isDeprecated": false
				},
				{
					"name": "KAZAKH",
					"isDeprecated": false
				},
				{
					"name": "KHMER",
					"isDeprecated": false
				},
				{
					"name": "KOREAN",
					"isDeprecated": false
				},
				{
					"name": "LAO",
					"isDeprecated": false
				},
				{
					"name": "LATVIAN",
					"isDeprecated": false
				},
				{
					"name": "LITHUANIAN",
					"isDeprecated": false
				},
				{
					"name": "MACEDONIAN",
					"isDeprecated": false
				},
				{
					"name": "MALAGASY",
					"isDeprecated": false
				},
				{
					"name": "MALAY",
					"isDeprecated": false
				},
				{
					"name": "MALAYALAM",
					"isDeprecated": false
				},
				{
					"name": "MALTESE",
					"isDeprecated": false
				},
				{
					"name": "MAORI",
					"isDeprecated": false
				},
				{
					"name": "MARATHI",
					"isDeprecated": false
				},
				{
					"name": "MONGOLIAN",
					"isDeprecated": false
				},
				{
					"name": "MYANMAR",
					"isDeprecated": false
				},
				{
					"name": "NEPALI",
					"isDeprecated": false
				},
				{
					"name": "NORWEGIAN",
					"isDeprecated": false
				},
				{
					"name": "PANJABI",
					"isDeprecated": false
				},
				{
					"name": "PERSIAN",
					"isDeprecated": false
				},
				{
					"name": "POLISH",
					"isDeprecated": false
				},
				{
					"name": "PORTUGUESE",
					"isDeprecated": false
				},
				{
					"name": "PUNJABI",
					"isDeprecated": false
				},
				{
					"name": "ROMANIAN",
					"isDeprecated": false
				},
				{
					"name": "RUSSIAN",
					"isDeprecated": false
				},
				{
					"name": "SERBIAN",
					"isDeprecated": false
				},
				{
					"name": "SESOTHO",
					"isDeprecated": false
				},
				{
					"name": "SINHALA",
					"isDeprecated": false
				},
				{
					"name": "SLOVAK",
					"isDeprecated": false
				},
				{
					"name": "SLOVENIAN",
					"isDeprecated": false
				},
				{
					"name": "SOMALI",
					"isDeprecated": false
				},
				{
					"name": "SPANISH",
					"isDeprecated": false
				},
				{
					"name": "SUDANESE",
					"isDeprecated": false
				},
				{
					"name": "SWAHILI",
					"isDeprecated": false
				},
				{
					"name": "SWEDISH",
					"isDeprecated": false
				},
				{
					"name": "TAGALOG",
					"isDeprecated": false
				},
				{
					"name": "TAJIK",
					"isDeprecated": false
				},
				{
					"name": "TAMIL",
					"isDeprecated": false
				},
				{
					"name": "TELUGU",
					"isDeprecated": false
				},
				{
					"name": "THAI",
					"isDeprecated": false
				},
				{
					"name": "TURKISH",
					"isDeprecated": false
				},
				{
					"name": "UKRAINIAN",
					"isDeprecated": false
				},
				{
					"name": "URDU",
					"isDeprecated": false
				},
				{
					"name": "UZBEK",
					"isDeprecated": false
				},
				{
					"name": "VIETNAMESE",
					"isDeprecated": false
				},
				{
					"name": "WELSH",
					"isDeprecated": false
				},
				{
					"name": "YIDDISH",
					"isDeprecated": false
				},
				{
					"name": "YORUBA",
					"isDeprecated": false
				},
				{
					"name": "ZULU",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "FeedbackFieldDataTypeNumberType",
			"values": [
				{
					"name": "INTEGER",
					"isDeprecated": false
				},
				{
					"name": "FRACTIONAL",
					"isDeprecated": false
				},
				{
					"name": "REAL_NUMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "FeedbackFieldDataTypeTextFormat",
			"values": [
				{
					"name": "TEXT",
					"isDeprecated": false
				},
				{
					"name": "COMMENT",
					"isDeprecated": false
				},
				{
					"name": "IP_ADDRESS",
					"isDeprecated": false
				},
				{
					"name": "HYPERLINK",
					"isDeprecated": false
				},
				{
					"name": "EMAIL",
					"isDeprecated": false
				},
				{
					"name": "PHONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "FeedbackFieldLayout",
			"values": [
				{
					"name": "SHORT_TEXT",
					"isDeprecated": false
				},
				{
					"name": "MED_TEXT",
					"isDeprecated": false
				},
				{
					"name": "LONG_TEXT",
					"isDeprecated": false
				},
				{
					"name": "FOUR_LINES",
					"isDeprecated": false
				},
				{
					"name": "TEN_LINES",
					"isDeprecated": false
				},
				{
					"name": "DROP_DOWN",
					"isDeprecated": false
				},
				{
					"name": "CHECK_BOX",
					"isDeprecated": false
				},
				{
					"name": "RADIO_BUTTON",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SocialSentimentId",
			"values": [
				{
					"name": "NO_SENTIMENT",
					"isDeprecated": false
				},
				{
					"name": "NEGATIVE",
					"isDeprecated": false
				},
				{
					"name": "MILD_NEGATIVE",
					"isDeprecated": false
				},
				{
					"name": "NEUTRAL",
					"isDeprecated": false
				},
				{
					"name": "MILD_POSITIVE",
					"isDeprecated": false
				},
				{
					"name": "POSITIVE",
					"isDeprecated": false
				}
			]
		}
	]
}