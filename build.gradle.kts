/*
 * This file was generated by the Gradle "init" task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

import com.jfrog.bintray.gradle.BintrayExtension
import com.jfrog.bintray.gradle.tasks.BintrayUploadTask

plugins {
    base
    id("maven-publish")
    id("kotlinx-serialization").version("1.3.41").apply(false)
    id("com.jfrog.bintray").version("1.8.4").apply(false)
    idea
}

subprojects {
    val suparnaturalVersion = "1.0.3"

    repositories {
        google()
        jcenter()
    }
    apply(plugin = "maven-publish")
    apply(plugin = "idea")
    apply(plugin = "com.jfrog.bintray")

    group = "com.suparnatural"
    version = suparnaturalVersion

    idea.module {
        isDownloadJavadoc = true
        isDownloadSources = true
    }


//    tasks.getting(DokkaTask::class) {
//        outputFormat = "html"
//        outputDirectory = "${project.projectDir.path}/docs"
//        impliedPlatforms = mutableListOf("Common") // This will force platform tags for all non-common sources e.g. "JVM"
//        kotlinTasks {
//            // dokka fails to retrieve sources from MPP-tasks so they must be set empty to avoid exception
//            // use sourceRoot instead (see below)
//            emptyList()
//        }
//        sourceRoot {
//            // assuming there is only a single source dir...
//            val kotlin = extensions["kotlin"] as KotlinMultiplatformExtension
//            println(kotlin.sourceSets["commonMain"].kotlin.srcDirs.first().absolutePath)
//            path = kotlin.sourceSets["commonMain"].kotlin.srcDirs.first().absolutePath
//            platforms = listOf("Common")
//        }
//    }


    val bintrayUpload = tasks["bintrayUpload"]
    bintrayUpload.dependsOn(tasks["publishToMavenLocal"])

    bintrayUpload.doFirst {
        (this as BintrayUploadTask).setPublications((project.publishing.publications.map { it.name }))
    }

    val bintray = extensions["bintray"] as BintrayExtension
    val projectName = name
    bintray.isOverride = true
    bintray.isPublish = true
    bintray.pkg(delegateClosureOf<BintrayExtension.PackageConfig> {
        // repo = localProperties.get("BINTRAY_REPOSITORY")
        name = projectName
        setLicenses("MIT")
        vcsUrl = "https://github.com/suparngp/kotlin-multiplatform-projects/tree/master/$projectName"

//        version {
//            name = "1.0.3"
//            desc = "1.0.3"
//        }
    })
}